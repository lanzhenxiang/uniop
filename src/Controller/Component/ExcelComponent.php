<?php
/**
* PHP 导出Excel文件
*
* @author lan
* @date 2017年1月20日
* @version 1.0.0
* @copyright  Copyright 2017 sobey.com
*/
namespace App\Controller\Component;

use Cake\Core\Configure;
use Cake\ORM\TableRegistry;
use Cake\Event\Event;
use Cake\Controller\Component;
use Cake\Core\Exception\Exception;
use Cake\Datasource\EntityInterface;

class ExcelComponent extends Component
{
	/**
	 *	PHPExcel object
	 * 
	 * @var [\PHPExcel]
	 */
	protected  $_PHPExcel;

    /**
     * [PHPExcel instance]
     * 
     * @var [\PHPExcel_Writer_Excel5]
     */
    protected  $_writer;

    /**
     * [$_property description]
     * 
     * @var [type]
     */
    protected  $_properties;


    /**
     * [$_ExcelActSheet description]
     * 
     * @var [type]
     */
    protected  $_ExcelActSheet;

    /**
     * 数据字段名和表格标题单元格内容的映射关系数组
     * 
     * @var array
     */
    protected  $_sheetColumnMaps = [];

    /**
     * 单元格列数数组[A-Z]
     * 
     * @var array
     */
    protected  $_cloumnKeys = [];

    /**
     * [导出excel文件 行数]
     * 
     * @var integer
     */
    protected  $_rows = 1;

	/**
     * Initialize properties.
     *
     * @param array $config The config data.
     * @return void
     */
    public function initialize(array $config)
    {
        parent::initialize($config);
        //设置PHPExcel类库的include path 
        //App::uses('Vendor', 'Classes/PHPExcel');
        require_once ROOT . DS . 'vendor' . DS . 'phpexcel' . DS . 'PHPExcel.php';
        // 创建一个处理对象实例 
        $this->_PHPExcel = new \PHPExcel(); 

        // 创建文件格式写入对象实例, uncomment 
        $this->_writer = new \PHPExcel_Writer_Excel5($this->_PHPExcel);     // 用于其他版本格式 
        //or
        //$objWriter = new \PHPExcel_Writer_Excel2007($objExcel); // 用于 2007 格式 

        //设置文档基本属性 
        $this->_properties = $this->_PHPExcel->getProperties(); 
        //设置当前的sheet索引，用于后续的内容操作。 
        //一般只有在使用多个sheet的时候才需要显示调用。 
        //缺省情况下，PHPExcel会自动创建第一个sheet被设置SheetIndex=0 
        $this->_PHPExcel->setActiveSheetIndex(0); 
        $this->_ExcelActSheet = $this->_PHPExcel->getActiveSheet();
        $this->_cloumnKeys = range('A', 'Z');
        $this->setDefaultProperties()->setDefaultStyle(); 
    }

    /**
     * 设置文件属性createName
     * 
     * @param string $createName
     */
    public function setCreator($createName = "Sobey")
    {
        $this->_properties->setCreator($createName);
        return $this;
    }

    /**
     * 设置文件属性modifyName
     * 
     * @param string $modifyName
     */
    public function setLastModifiedBy($modifyName = "Sobey")
    {
        $this->_properties->setLastModifiedBy($modifyName);
        return $this;
    }

    /**
     * 设置文件属性title
     * 
     * @param string $title
     */
    public function setTitle($title = "Office XLS Test Document")
    {
        $this->_properties->setTitle($title);
        return $this;
    }

    /**
     * 设置文件属性subject
     * 
     * @param string $subject
     */
    public function setSubject($subject = "Office XLS Test Document, Demo")
    {
        $this->_properties->setSubject($subject);
        return $this;
    }

    /**
     * 设置文件属性description
     * 
     * @param string $description
     */
    public function setDescription($description = "Test document, generated by PHPExcel.")
    {
        $this->_properties->setDescription($description);
        return $this;
    }

    /**
     * 设置文件属性keywords
     * 
     * @param string $keyWords 
     */
    public function setKeywords($keyWords = "Test document, generated by PHPExcel.")
    {
        $this->_properties->setKeywords($keyWords);
        return $this;
    }

    /**
     * 设置文件属性category
     * 
     * @param string $category 
     */
    public function setCategory($category = "Test")
    {
        $this->_properties->setCategory($category);
        return $this;
    }

    public function setDefaultProperties()
    {
        $this->setCreator()
            ->setLastModifiedBy()
            ->setTitle()
            ->setSubject()
            ->setDescription()
            ->setKeywords()
            ->setCategory();
        return $this;
    }

    /**
     * 设置表格标题，表格索引键与列位置的关系
     * 
     * @param Array $cloumnTitle ['列名'=>'表格标题名']
     */
    public function setSheetCloumnTitle(Array $cloumnTitle)
    {
        $i = 0;
        foreach ($cloumnTitle as $columnKey => $title) {
            $this->_ExcelActSheet->setCellValue($this->_cloumnKeys[$i].$this->_rows, $title);
            //设置cloumn为自动宽度
            $this->_ExcelActSheet->getColumnDimension($this->_cloumnKeys[$i])->setAutoSize(true);
            //建立列位置与数据的索引键映射关系
            $this->_sheetColumnMaps[$columnKey] = $this->_cloumnKeys[$i++];
        }
        $this->_rows++;
        return $this;
    }

    /**
     * 设置Excel表格内容主体部分
     * 
     * @param Array $rows 二维数组
     */
    public function setSheetColumnBody(Array $rows)
    {   
        foreach ($rows as $rowKey => $row) {
            if($row instanceof EntityInterface){
                $row = $row->toArray();
            }
            if(!is_array($row) || empty($row)){
                throw new Exception("PHPExcel 表格内容数据不正确，没有列数据");
            }
            foreach($row as $columnKey =>$cellValue){
                if(array_key_exists($columnKey, $this->_sheetColumnMaps)){
                    $this->_ExcelActSheet->setCellValue($this->_sheetColumnMaps[$columnKey].$this->_rows, $cellValue);
                }
            }
            //增加行计数
            $this->_rows++;
        }
        return $this;
    }

    /**
     *  设置Excel默认样式
     * 
     */
    public function setDefaultStyle()
    {
        $this->setShowGridlines()//显示网格线 默认显示
            ->setFontName() //设置字体 默认Arial
            ->setFontSize(); //设置字体大小  默认12
        //设置单元格居中对齐
        $this->_PHPExcel->getActiveSheet()->getDefaultStyle()->getAlignment()->setHorizontal(\PHPExcel_Style_Alignment::HORIZONTAL_CENTER); 
        //设置单元格垂直居中
        $this->_PHPExcel->getActiveSheet()->getDefaultStyle()->getAlignment()->setVertical(\PHPExcel_Style_Alignment::VERTICAL_CENTER);
        return $this;
    }

    /**
     * 设置网格线是否显示
     * 
     * @param boolean $status 
     */
    public function setShowGridlines($status = true)
    {
        $this->_PHPExcel->getActiveSheet()->setShowGridlines($status);
        return $this;
    }

    /**
     * 设置字体名称
     * 
     * @param string $name 
     */
    public function setFontName($name = "Arial")
    {
        $this->_PHPExcel->getActiveSheet()->getDefaultStyle()->getFont()->setName($name);
        return $this;
    }

    /**
     * 设置Excel文件字体大小
     * 
     * @param int $size 
     */
    public function setFontSize($size = 12)
    {
        $this->_PHPExcel->getActiveSheet()->getDefaultStyle()->getFont()->setSize($size);
        return $this;
    }

    /**
     *  Excel文件输出 download
     * 
     * @param  string $fileName 文件名称
     */
    public function export($fileName = "default")
    {
       //输出内容 
       $outputFileName = $fileName.".xls"; 
       //到浏览器 
       header("Content-Type: application/force-download"); 
       header("Content-Type: application/octet-stream"); 
       header("Content-Type: application/download"); 
       header('Content-Disposition:inline;filename="'.$outputFileName.'"'); 
       header("Content-Transfer-Encoding: binary"); 
       header("Last-Modified: " . gmdate("D, d M Y H:i:s") . " GMT"); 
       header("Cache-Control: must-revalidate, post-check=0, pre-check=0"); 
       header("Pragma: no-cache");      
       $this->_writer->save('php://output');
       exit();
    }


    // protected function _generateCloumnArray($counts)
    // {
    //     if($counts < 1){
    //         return [];
    //     }
    //     $counts % 26 == 0;

    //     // A B C D E F H I ... AA AB AC AD ..
    //     if($counts % 26){
    //         return range('A', 'Z');
    //     }else{

    //     }
    // }

}